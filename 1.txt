%{
#include<stdio.h>
int v=0,op=0,id=0,flag=0;
%}

%%
[0-9][0-9]* {id++;printf("\nIdentifier:");ECHO;}
[\+\-\*\/\=] {op++;printf("\nOperartor:");ECHO;}
"(" {v++;}
")" {v--;}

.|\n {return 0;}
%%
int main()
{
	printf("Enter the expression:\n");
	yylex();
	if((op+1) ==id && v==0)
	{
		printf("\n\nIdentifiers are:%d\nOperators are:%d\n",id,op);
		printf("\nExpression is Valid\n");
	}
	else
		printf("\nExpression is Invalid\n");
	return 1;
}
int yywrap()
{
	return 1;
} 








%{
#include "y.tab.h"
extern yylval;
%}

%%
[0-9]+ 		{yylval=atoi(yytext);return num;}
[\+\-\*\/] 	{return yytext[0];}
[)] 		{return yytext[0];}
[(] 		{return yytext[0];}
. 			{;}
\n 			{return 0;}
%%









%{
#include<stdio.h>
#include<stdlib.h>
%}

%token num
%left '+' '-'
%left '*' '/'

%%
input : exp {printf("%d\n",$$);exit(0);}
exp : exp'+'exp {$$=$1+$3;}
		| exp'-'exp{$$=$1-$3;}
		| exp'*'exp{$$=$1*$3;}
		| exp'/'exp { if($3==0){printf("Divide by Zero. Invalid expression.\n");exit(0);}
		   else $$=$1/$3;}
		| '('exp')'{$$=$2;}
		| num{$$=$1;} ;
%%

int yywrap()
{
r	return 1;
}

int main()
{
	printf("Enter an expression:\n");
	yyparse();
       
}




